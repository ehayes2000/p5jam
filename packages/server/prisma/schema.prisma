generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id             String           @id
  name           String           @unique
  commentCount   Int              @default(0)
  postCount      Int              @default(0)
  posts          Post[]
  sessions       Session[]
  comments       Comment[]
  likes          Like[]
  jams           Jam[]
  JamParticipant JamParticipant[]
}

model Post {
  id           String    @id
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  description  String    @default("")
  content      String    @default("")
  script       String    @default("")
  likeCount    Int       @default(0)
  viewCount    Int       @default(0)
  commentCount Int       @default(0)
  author       User      @relation(fields: [authorId], references: [id])
  authorId     String
  comments     Comment[]
  likes        Like[]
  jamId        String?
  jam          Jam?      @relation(fields: [jamId], references: [id])
}

model Comment {
  id        String   @id
  createdAt DateTime @default(now())
  text      String
  likeCount Int      @default(0)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model Like {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@id([userId, postId])
}

model JamParticipant {
  userId String
  user   User    @relation(fields: [userId], references: [id])
  jamId  String
  jam    Jam     @relation(fields: [jamId], references: [id])
  active Boolean @default(true)

  @@id([jamId, userId])
}

model Jam {
  id             String           @id
  ownerId        String
  creator        User             @relation(fields: [ownerId], references: [id])
  startTime      DateTime         @default(now())
  endTime        DateTime
  title          String
  JamParticipant JamParticipant[]
  Post           Post[]
  isDeleted      Boolean          @default(false)
}
